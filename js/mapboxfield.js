/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/mapboxfieldbeforewebpack.js":
/*!****************************************!*\
  !*** ./js/mapboxfieldbeforewebpack.js ***!
  \****************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_mapboxobjects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../js/mapboxobjects.js */ \"./js/mapboxobjects.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n // エントリー詳細画面にてMapboxユニットを表示\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  createFieldMap();\n});\n\nvar FieldMap = /*#__PURE__*/function (_Mymap) {\n  _inherits(FieldMap, _Mymap);\n\n  var _super = _createSuper(FieldMap);\n\n  function FieldMap() {\n    _classCallCheck(this, FieldMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FieldMap, [{\n    key: \"instantiationMap\",\n    // マップのインスタンス化\n    value: function instantiationMap() {\n      this.map = new this.mapboxgl.Map({\n        container: 'fmap',\n        style: this.styleurl,\n        //基本的な画面の制御プロパティ\n        center: [this.lng, this.lat],\n        zoom: this.zoom,\n        pitch: this.pitch,\n        bearing: this.bearing\n      });\n    }\n  }]);\n\n  return FieldMap;\n}(_js_mapboxobjects_js__WEBPACK_IMPORTED_MODULE_0__.Mymap); //   エントリー「変更」画面にてインスタンス化\n\n\nvar FieldExsistedMap = /*#__PURE__*/function (_FieldMap) {\n  _inherits(FieldExsistedMap, _FieldMap);\n\n  var _super2 = _createSuper(FieldExsistedMap);\n\n  function FieldExsistedMap(mapInformationObj) {\n    var _this;\n\n    _classCallCheck(this, FieldExsistedMap);\n\n    _this = _super2.call(this, mapInformationObj);\n\n    _this.instanceMethod();\n\n    return _this;\n  }\n\n  _createClass(FieldExsistedMap, [{\n    key: \"instanceMethod\",\n    value: function instanceMethod() {\n      this.instantiationMap();\n      this.instantiationMarker();\n      this.setMapZoomToForm(this.map);\n      this.addExtentionToMap(this.map);\n      this.getMarkerDropLocation(this.map);\n      this.adaptFormLocationToMarker();\n      this.setMapPitchToForm(this.map);\n      this.setMapBearingToForm(this.map);\n    }\n  }]);\n\n  return FieldExsistedMap;\n}(FieldMap); //   マップカテゴリのカスタムフィールドの新規作成時にインスタンス化\n\n\nvar FieldDefaultMap = /*#__PURE__*/function (_FieldMap2) {\n  _inherits(FieldDefaultMap, _FieldMap2);\n\n  var _super3 = _createSuper(FieldDefaultMap);\n\n  function FieldDefaultMap(mapInformationObj) {\n    var _this2;\n\n    _classCallCheck(this, FieldDefaultMap);\n\n    _this2 = _super3.call(this, mapInformationObj);\n    _this2.lng = 135;\n    _this2.lat = 35;\n    _this2.zoom = 5;\n    _this2.pitch = 0;\n    _this2.bearing = 0;\n\n    _this2.instanceMethod();\n\n    return _this2;\n  } // インスタンス時によばれるメソッド\n\n\n  _createClass(FieldDefaultMap, [{\n    key: \"instanceMethod\",\n    value: function instanceMethod() {\n      this.setDefaultValueToForm();\n      this.instantiationMap();\n      this.instantiationMarker();\n      this.setMapZoomToForm(this.map);\n      this.addExtentionToMap(this.map);\n      this.getMarkerDropLocation(this.map);\n      this.adaptFormLocationToMarker();\n      this.setMapPitchToForm(this.map);\n      this.setMapBearingToForm(this.map);\n    }\n  }]);\n\n  return FieldDefaultMap;\n}(FieldMap);\n\nvar ShowFieldMap = /*#__PURE__*/function (_FieldMap3) {\n  _inherits(ShowFieldMap, _FieldMap3);\n\n  var _super4 = _createSuper(ShowFieldMap);\n\n  function ShowFieldMap(mapInformationObj) {\n    var _this3;\n\n    _classCallCheck(this, ShowFieldMap);\n\n    _this3 = _super4.call(this, mapInformationObj);\n\n    _this3.instanceMethod();\n\n    return _this3;\n  }\n\n  _createClass(ShowFieldMap, [{\n    key: \"instanceMethod\",\n    value: function instanceMethod() {\n      this.instantiationMap();\n      this.instantiationMarker();\n    } // インスタンス作成時によばれるメソッド\n\n  }, {\n    key: \"instantiationMarker\",\n    value: function instantiationMarker() {\n      // マーカーを立てる\n      this.marker = new this.mapboxgl.Marker({}).setLngLat(this.map.getCenter()).addTo(this.map);\n    }\n  }]);\n\n  return ShowFieldMap;\n}(FieldMap);\n\nvar MapFieldSize = /*#__PURE__*/function (_MapSize) {\n  _inherits(MapFieldSize, _MapSize);\n\n  var _super5 = _createSuper(MapFieldSize);\n\n  function MapFieldSize(mapInformationObj) {\n    _classCallCheck(this, MapFieldSize);\n\n    return _super5.call(this, mapInformationObj);\n  }\n\n  return MapFieldSize;\n}(_js_mapboxobjects_js__WEBPACK_IMPORTED_MODULE_0__.MapSize); //   カスタムフィールドMapboxを作成\n\n\nfunction createFieldMap(unitid) {\n  var mapInformationObj = {\n    formlngtag: document.getElementById('lng'),\n    formlattag: document.getElementById('lat'),\n    formzoomtag: document.getElementById('zoom'),\n    formpitchtag: document.getElementById('pitch'),\n    formbearingtag: document.getElementById('bearing'),\n    formsizetag: document.getElementById('size'),\n    formcommenttag: document.getElementById('comment'),\n    maptag: document.getElementById('fmap'),\n    mapwrappertag: document.getElementById('fmapwrapper'),\n    geocodertag: document.getElementById('geocoder'),\n    accesstoken_styleurltag: document.getElementById('accesstoken_styleurl'),\n    lng: document.getElementById('fmap').dataset.lng,\n    lat: document.getElementById('fmap').dataset.lat,\n    zoom: document.getElementById('fmap').dataset.zoom,\n    pitch: document.getElementById('fmap').dataset.pitch,\n    bearing: document.getElementById('fmap').dataset.bearing,\n    styleurl: document.getElementById('accesstoken_styleurl').dataset.styleurl,\n    accesstoken: document.getElementById('accesstoken_styleurl').dataset.accesstoken,\n    comment: document.getElementById('fmap').dataset.comment,\n    mapsize: document.getElementById('fmap').dataset.mapsize,\n    maptype: document.getElementById('fmap').dataset.maptype\n  };\n\n  if (mapInformationObj.maptype === 'show') {\n    // エントリー詳細画面での処理\n    console.log('field show');\n    var mapbox_map = new ShowFieldMap(mapInformationObj);\n  } else if (mapInformationObj.lng != false) {\n    // マップカテゴリのカスタムフィールドを既存の場合に処理\n    var _mapbox_map = new FieldExsistedMap(mapInformationObj);\n\n    var mapbox_geocoder = new _js_mapboxobjects_js__WEBPACK_IMPORTED_MODULE_0__.Geocoder(_mapbox_map);\n    console.log('field exsisted');\n  } else if (mapInformationObj.maptype === 'field') {\n    // マップカテゴリのカスタムフィールドを新規作成の場合に処理\n    console.log('field new');\n\n    var _mapbox_map2 = new FieldDefaultMap(mapInformationObj);\n\n    var _mapbox_geocoder = new _js_mapboxobjects_js__WEBPACK_IMPORTED_MODULE_0__.Geocoder(_mapbox_map2);\n  }\n}\n\nconsole.log('mapboxfield.js loaded');\n\n//# sourceURL=webpack://beginner2020/./js/mapboxfieldbeforewebpack.js?");

/***/ }),

/***/ "./js/mapboxobjects.js":
/*!*****************************!*\
  !*** ./js/mapboxobjects.js ***!
  \*****************************/
/*! namespace exports */
/*! export Geocoder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MapSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Mymap [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mymap\": function() { return /* binding */ Mymap; },\n/* harmony export */   \"MapSize\": function() { return /* binding */ MapSize; },\n/* harmony export */   \"Geocoder\": function() { return /* binding */ Geocoder; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Mymap = /*#__PURE__*/function () {\n  function Mymap(mapInformationObj) {\n    _classCallCheck(this, Mymap);\n\n    this.mapboxgl = mapboxgl;\n    this.mapboxgl.accessToken = mapInformationObj.accesstoken;\n    this.accesstoken = mapInformationObj.accesstoken;\n    this.styleurl = mapInformationObj.styleurl;\n    this.lng = mapInformationObj.lng;\n    this.lat = mapInformationObj.lat;\n    this.pitch = mapInformationObj.pitch;\n    this.bearing = mapInformationObj.bearing;\n    this.zoom = mapInformationObj.zoom;\n    this.comment = mapInformationObj.comment;\n    this.mapsize = mapInformationObj.mapsize;\n    this.maptype = mapInformationObj.maptype;\n    this.formlngtag = mapInformationObj.formlngtag;\n    this.formlattag = mapInformationObj.formlattag;\n    this.formzoomtag = mapInformationObj.formzoomtag;\n    this.formpitchtag = mapInformationObj.formpitchtag;\n    this.formbearingtag = mapInformationObj.formbearingtag;\n    this.formsizetag = mapInformationObj.formsizetag;\n    this.formcommenttag = mapInformationObj.formcommenttag;\n    this.formsetstyleurltag = mapInformationObj.formsetstyleurltag;\n    this.maptag = mapInformationObj.maptag;\n    this.mapwrappertag = mapInformationObj.maptagwrapper;\n    this.geocodertag = mapInformationObj.geocodertag;\n    this.accesstoken_styleurltag = mapInformationObj.accesstoken_styleurltag;\n  } // インスタンス生成\n\n\n  _createClass(Mymap, [{\n    key: \"instanceMethod\",\n    value: function instanceMethod() {\n      this.instantiationMap();\n      this.instantiationMarker();\n      this.instantiationPopup();\n      this.addExtentionToMap(this.map);\n    } // マップのインスタンス化\n\n  }, {\n    key: \"instantiationMap\",\n    value: function instantiationMap() {\n      this.map = new this.mapboxgl.Map({\n        container: 'map',\n        style: this.styleurl,\n        //基本的な画面の制御プロパティ\n        center: [this.lng, this.lat],\n        zoom: this.zoom,\n        pitch: this.pitch,\n        bearing: this.bearing\n      });\n    } // マーカーのインスタンス化\n\n  }, {\n    key: \"instantiationMarker\",\n    value: function instantiationMarker() {\n      // マーカーを立てる\n      this.marker = new this.mapboxgl.Marker({\n        draggable: true\n      }).setLngLat(this.map.getCenter()).addTo(this.map);\n    } // ポップアップのインスタンス化\n\n  }, {\n    key: \"instantiationPopup\",\n    value: function instantiationPopup() {\n      this.popup = new mapboxgl.Popup().setHTML(this.comment);\n      this.marker.setPopup(this.popup);\n    } // マップの追加機能\n\n  }, {\n    key: \"addExtentionToMap\",\n    value: function addExtentionToMap(map) {\n      //拡大・縮小・方位ナビゲーション  \n      map.addControl(new mapboxgl.NavigationControl(), 'top-left'); //フルスクリーンモード\n\n      map.addControl(new mapboxgl.FullscreenControl()); //スケール表示\n\n      map.addControl(new mapboxgl.ScaleControl({\n        maxWidth: 80,\n        unit: 'metric'\n      }));\n    } // htmlに持たせたデータ属性をフォームに代入\n\n  }, {\n    key: \"setDefaultValueToForm\",\n    value: function setDefaultValueToForm() {\n      this.formlngtag.value = this.lng;\n      this.formlattag.value = this.lat;\n      this.formzoomtag.value = this.zoom;\n      this.formpitchtag.value = this.pitch;\n      this.formbearingtag.value = this.bearing;\n    } // 地図の角度をフォームに代入\n\n  }, {\n    key: \"setMapPitchToForm\",\n    value: function setMapPitchToForm(map) {\n      var _this = this;\n\n      map.on('pitch', function (e) {\n        // 現在のpitchレベル取得\n        _this.formpitchtag.value = e.target.getPitch();\n      });\n    } // 地図の回転をフォームに代入\n\n  }, {\n    key: \"setMapBearingToForm\",\n    value: function setMapBearingToForm(map) {\n      var _this2 = this;\n\n      map.on(\"rotate\", function (e) {\n        _this2.formbearingtag.value = e.target.getBearing();\n      });\n    } // マップをズームした際のイベント\n\n  }, {\n    key: \"setMapZoomToForm\",\n    value: function setMapZoomToForm(map) {\n      var _this3 = this;\n\n      // ズームイベント\n      map.on('zoom', function () {\n        // 現在のズームレベル取得\n        _this3.formzoomtag.value = map.getZoom();\n      });\n    } // マーカーをドロップした際のイベント設定\n\n  }, {\n    key: \"getMarkerDropLocation\",\n    value: function getMarkerDropLocation(map) {\n      var _this4 = this;\n\n      // マーカーをドロップした位置にマップを移動\n      this.marker.on('dragend', function () {\n        var LngLat = _this4.marker.getLngLat();\n\n        _this4.formlngtag.value = LngLat.lng;\n        _this4.formlattag.value = LngLat.lat;\n        map.flyTo({\n          center: [LngLat.lng, LngLat.lat]\n        });\n      });\n    } // ポップアップのコメントを変更\n\n  }, {\n    key: \"changePopupComment\",\n    value: function changePopupComment() {\n      var comment = document.getElementById('comment');\n      this.popup.setHTML(comment.value);\n    } // フォームに入力したコメントをポップアップに反映\n\n  }, {\n    key: \"adaptFormCommentToPopup\",\n    value: function adaptFormCommentToPopup() {\n      this.formcommenttag.addEventListener('change', {\n        popup: this.popup,\n        handleEvent: this.changePopupComment\n      });\n    } // フォームタグに直接数値を入力した際にマップのマーカーの位置を移動\n\n  }, {\n    key: \"adaptFormLocationToMarker\",\n    value: function adaptFormLocationToMarker() {\n      var _this5 = this;\n\n      this.formlngtag.addEventListener('change', function () {\n        _this5.map.flyTo({\n          center: [_this5.formlngtag.value, _this5.formlattag.value]\n        });\n\n        _this5.marker.setLngLat([_this5.formlngtag.value, _this5.formlattag.value]).addTo(_this5.map);\n      });\n      this.formlattag.addEventListener('change', function () {\n        _this5.map.flyTo({\n          center: [_this5.formlngtag.value, _this5.formlattag.value]\n        });\n\n        _this5.marker.setLngLat([_this5.formlngtag.value, _this5.formlattag.value]).addTo(_this5.map);\n      });\n    }\n  }]);\n\n  return Mymap;\n}();\nvar MapSize = /*#__PURE__*/function () {\n  function MapSize(mapInformationObj) {\n    _classCallCheck(this, MapSize);\n\n    this.maptag = mapInformationObj.maptag;\n    this.mapwrappertag = mapInformationObj.mapwrappertag;\n    this.mapsize = mapInformationObj.mapsize;\n  }\n\n  _createClass(MapSize, [{\n    key: \"setMapwrappertagSize\",\n    value: function setMapwrappertagSize() {\n      if (this.mapsize === 'big') {\n        this.mapwrappertag.style.maxWidth = '100%';\n        this.mapwrappertag.style.width = '820px';\n        this.mapwrappertag.style.height = '320px';\n        this.maptag.style.width = '820px';\n        this.maptag.style.height = '320px';\n      } else {\n        this.mapwrappertag.style.maxWidth = '100%';\n        this.mapwrappertag.style.width = '400px';\n        this.mapwrappertag.style.height = '300px';\n        this.maptag.style.width = '400px';\n        this.maptag.style.height = '300px';\n      }\n    }\n  }, {\n    key: \"setMapwrappertagMargin\",\n    value: function setMapwrappertagMargin() {\n      this.mapwrappertag.style.marginLeft = \"auto\";\n      this.mapwrappertag.style.marginRight = \"auto\";\n    }\n  }]);\n\n  return MapSize;\n}(); //   Mapbox検索機能のクラス\n\nvar Geocoder = /*#__PURE__*/function () {\n  function Geocoder(mapinstance) {\n    _classCallCheck(this, Geocoder);\n\n    this.map = mapinstance.map;\n    this.marker = mapinstance.marker;\n    this.mapboxgl = mapinstance.mapboxgl;\n    this.accesstoken = mapinstance.accesstoken;\n    this.formlngtag = mapinstance.formlngtag;\n    this.formlattag = mapinstance.formlattag;\n    this.geocodertag = mapinstance.geocodertag;\n    this.instantiationGeooder();\n    this.setStyleGeocoderTag();\n    this.setStyleInput();\n    this.setLngLatToForm();\n    this.setMarkerToLngLat();\n  } // 場所検索機能の追加\n\n\n  _createClass(Geocoder, [{\n    key: \"instantiationGeooder\",\n    value: function instantiationGeooder(mapinstance) {\n      //  場所検索フォームを追加\n      this.geocoder = new MapboxGeocoder({\n        accessToken: this.accesstoken,\n        mapboxgl: this.mapboxgl,\n        marker: false,\n        placeholder: '検索'\n      });\n      this.geocodertag.appendChild(this.geocoder.onAdd(this.map));\n    } //   検索ボックスのスタイル変更\n\n  }, {\n    key: \"setStyleGeocoderTag\",\n    value: function setStyleGeocoderTag() {\n      this.geocodertag.style.Width = '100%';\n      this.geocodertag.style.marginTop = \"5px\";\n    } // 検索機能のフォームのパディング調整（デフォルトではアイコンとフォームが重なっている）\n\n  }, {\n    key: \"setStyleInput\",\n    value: function setStyleInput() {\n      var mapboxgl_ctrl_geocodertag = this.geocodertag.getElementsByClassName('mapboxgl-ctrl-geocoder')[0];\n      mapboxgl_ctrl_geocodertag.style.minWidth = '100%';\n      var geocoderinputtag = this.geocodertag.getElementsByClassName('mapboxgl-ctrl-geocoder--input')[0];\n      geocoderinputtag.style.paddingLeft = \"35px\";\n      geocoderinputtag.style.width = \"100%\";\n    } // 地図の角度をフォームに代入\n\n  }, {\n    key: \"setLngLatToForm\",\n    value: function setLngLatToForm() {\n      var _this6 = this;\n\n      this.geocoder.on('result', function (e) {\n        var lnglat = e.result.center;\n        _this6.formlngtag.value = lnglat[0];\n        _this6.formlattag.value = lnglat[1];\n      });\n    } // 検索結果の位置にマーカーを移動\n\n  }, {\n    key: \"setMarkerToLngLat\",\n    value: function setMarkerToLngLat() {\n      var _this7 = this;\n\n      this.geocoder.on('result', function (e) {\n        var lnglat = e.result.center; // this.map.flyTo({ center: [lnglat[0], lnglat[1]] });\n\n        _this7.marker.setLngLat([lnglat[0], lnglat[1]]).addTo(_this7.map);\n      });\n    }\n  }]);\n\n  return Geocoder;\n}();\n\n//# sourceURL=webpack://beginner2020/./js/mapboxobjects.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./js/mapboxfieldbeforewebpack.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;